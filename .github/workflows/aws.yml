name: CI/CD to Elastic Beanstalk - TEST PYTHON

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create deploy ZIP
        run: |
          zip -r deploy.zip . -x "*.git*"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: deploy-zip
          path: deploy.zip

  deploy:
    needs: build-and-test
    # Solo desplegar en push directo a main
    if: github.event_name == 'push' && github.ref_name == 'main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: deploy-zip
          path: .

      - name: Sanity check
        run: |
          echo "event=${{ github.event_name }} ref=${{ github.ref }} ref_name=${{ github.ref_name }}"
          ls -lah

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APP_NAME }}
          environment_name: ${{ secrets.EB_ENV_NAME }}
          # Región fija según tu entorno
          region: us-east-2
          version_label: v-${{ github.run_number }}-${{ github.sha }}
          deployment_package: deploy.zip
          # Evita que el action intente crear bucket y usa el existente
          existing_bucket_name: elasticbeanstalk-us-east-2-257247531621
